---
title: "Reviewable Technical Document"
author: "Your Name"
date: last-modified
format:
  html:
    toc: true
    toc-location: left
    filters:
      - _extensions/web-review/web-review.lua
web-review:
  enabled: true
  mode: "review"
  features:
    comments: true
    editing: true
    versioning: true
    diff-view: true
  git:
    enabled: true
    provider: "github"
    client-id: "Ov23liciIyUSEqziWxVe"  # Your OAuth App Client ID
    repository:
      owner: "mvwestendorp"  # Replace with your GitHub username
      repo: "quarto-review-extension-github-demo"  # Replace with your repository name
      branch: "main"
---

## Introduction

This is an example technical document that can be reviewed collaboratively using the Quarto Web Review extension with Git integration.

### How to Review This Document

1. **Browse the document** - Read through the content
2. **Add comments** - Select any text and click "Add Comment"
3. **Suggest changes** - Double-click any paragraph to edit
4. **Submit to Git** - Click the GitHub button in the toolbar to submit your review

## Technical Content

### Example Section

This paragraph contains some technical information that reviewers might want to comment on or suggest changes to. Try selecting this text and adding a comment!

The review system allows you to:

- Add inline comments to specific text selections
- Suggest edits to paragraphs, headings, and other elements
- Track changes with visual diff highlighting
- Submit all changes as a Pull Request on GitHub

### Code Example

```python
def process_data(input_file):
    """Process data from input file."""
    with open(input_file, 'r') as f:
        data = f.read()
    return data.strip()
```

You can review code blocks too! Comments and suggestions help improve code quality.

### More Content

Add more sections here. Each section can be independently reviewed, commented on, and edited by your reviewers.

## Submitting Your Review

When you're done reviewing:

1. Click the **GitHub icon** (Submit to Git button) in the toolbar
2. If not already authenticated:
   - A modal will show a device code
   - Visit `https://github.com/login/device`
   - Enter the code and authorize
3. Your review will be submitted as a Pull Request
4. The PR will contain:
   - All your suggested changes as commits
   - Your comments in the PR description
   - A link back to this review

## What Happens Next?

The document author will:

1. Receive a notification about your PR
2. Review your changes in GitHub
3. Accept or reject individual changes
4. Merge approved changes back to the main branch
5. The updated document will be automatically deployed

---

**Note:** This is a live example. Feel free to make edits and test the review workflow!
